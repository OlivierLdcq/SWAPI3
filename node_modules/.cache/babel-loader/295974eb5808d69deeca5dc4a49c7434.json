{"ast":null,"code":"var _jsxFileName = \"/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js\";\nimport React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDisplay = _ref => {\n  let {\n    starWarsList,\n    search,\n    select\n  } = _ref;\n  var sortedList = JSON.parse(JSON.stringify(starWarsList.results));\n\n  function SortArrayByAlpha(x, y) {\n    if (x.name < y.name) {\n      return -1;\n    }\n\n    if (x.name > y.name) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  console.log(sortedList);\n\n  switch (select) {\n    case \"popularity\":\n      sortedList = JSON.parse(JSON.stringify(starWarsList.results));\n      console.log(\"this is sorted by popularity\");\n      break;\n\n    case \"alphabetical\":\n      let sortedListCPY = starWarsList.results.sort(SortArrayByAlpha);\n      sortedList = JSON.parse(JSON.stringify(sortedListCPY));\n      break;\n\n    case \"height\":\n      let sortedListCPY2 = starWarsList.results.sort(function (a, b) {\n        return parseFloat(a.height) - parseFloat(b.height);\n      });\n      sortedList = JSON.parse(JSON.stringify(sortedListCPY2));\n      break;\n  }\n\n  if (starWarsList !== \"\") {\n    var filteredList = sortedList.filter(item => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n  } else {\n    filteredList = sortedList;\n  }\n\n  const heightArray = starWarsList.results.map(item => {\n    return item.height;\n  });\n  let tallest = Math.max(...heightArray);\n  console.log(tallest);\n  let todivedBy = tallest / 100;\n  console.log(todivedBy);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardDisplay\",\n    children: filteredList.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        name: item.name,\n        mass: item.mass,\n        height: item.height,\n        gender: item.gender,\n        todivedBy: todivedBy\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CardDisplay;\nexport default CardDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"sources":["/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js"],"names":["React","Component","Card","CardDisplay","starWarsList","search","select","sortedList","JSON","parse","stringify","results","SortArrayByAlpha","x","y","name","console","log","sortedListCPY","sort","sortedListCPY2","a","b","parseFloat","height","filteredList","filter","item","toLowerCase","includes","heightArray","map","tallest","Math","max","todivedBy","index","mass","gender"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card from \"./Card\";\nconst CardDisplay = ({ starWarsList, search, select }) => {\n  var sortedList = JSON.parse(JSON.stringify(starWarsList.results));\n  function SortArrayByAlpha(x, y) {\n    if (x.name < y.name) {\n      return -1;\n    }\n    if (x.name > y.name) {\n      return 1;\n    }\n    return 0;\n  }\n  console.log(sortedList);\n  switch (select) {\n    case \"popularity\":\n      sortedList = JSON.parse(JSON.stringify(starWarsList.results));\n      console.log(\"this is sorted by popularity\");\n      break;\n    case \"alphabetical\":\n      let sortedListCPY = starWarsList.results.sort(SortArrayByAlpha);\n      sortedList = JSON.parse(JSON.stringify(sortedListCPY));\n      break;\n    case \"height\":\n      let sortedListCPY2 = starWarsList.results.sort(function (a, b) {\n        return parseFloat(a.height) - parseFloat(b.height);\n      });\n      sortedList = JSON.parse(JSON.stringify(sortedListCPY2));\n      break;\n  }\n\n  if (starWarsList !== \"\") {\n    var filteredList = sortedList.filter((item) => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n  } else {\n    filteredList = sortedList;\n  }\n\n  const heightArray = starWarsList.results.map((item) => {\n    return item.height;\n  });\n\n  let tallest = Math.max(...heightArray);\n  console.log(tallest);\n  let todivedBy = tallest / 100;\n  console.log(todivedBy);\n\n  return (\n    <div className=\"CardDisplay\">\n      {filteredList.map((item, index) => {\n        return (\n          <Card\n            key={index}\n            name={item.name}\n            mass={item.mass}\n            height={item.height}\n            gender={item.gender}\n            todivedBy={todivedBy}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardDisplay;\n"]},"metadata":{},"sourceType":"module"}