{"ast":null,"code":"import _toConsumableArray from\"/Users/olivierlesucq/Documents/swapi/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{Component}from\"react\";import\"./CardDisplay.css\";import Card2 from\"./Card2\";import{jsx as _jsx}from\"react/jsx-runtime\";var CardDisplay=function CardDisplay(_ref){var starWarsList=_ref.starWarsList,search=_ref.search,select=_ref.select,cardFlash=_ref.cardFlash,count=_ref.count;var SWLCPY=JSON.parse(JSON.stringify(starWarsList.results));console.log(\"this is SWLCPy\");console.log(SWLCPY);SWLCPY[0].rank=1;SWLCPY[1].rank=2;SWLCPY[2].rank=3;SWLCPY[3].rank=4;SWLCPY[9].rank=5;SWLCPY[4].rank=6;SWLCPY[5].rank=7;SWLCPY[6].rank=8;SWLCPY[7].rank=9;SWLCPY[8].rank=10;function SortArrayByAlpha(x,y){if(x.name<y.name){return-1;}if(x.name>y.name){return 1;}return 0;}var sortedList;switch(select){case\"popularity\":sortedList=SWLCPY.sort(function(a,b){return parseFloat(a.rank)-parseFloat(b.rank);});break;case\"alphabetical\":sortedList=SWLCPY.sort(SortArrayByAlpha);break;case\"height\":sortedList=SWLCPY.sort(function(a,b){return parseFloat(a.height)-parseFloat(b.height);});break;case\"mass\":sortedList=SWLCPY.sort(function(a,b){return parseFloat(a.mass)-parseFloat(b.mass);});break;}if(starWarsList!==\"\"){var filteredList=sortedList.filter(function(item){return item.name.toLowerCase().includes(search.toLowerCase());});}else{filteredList=sortedList;}var heightArray=starWarsList.results.map(function(item){return item.height;});var massArray=starWarsList.results.map(function(item){return item.mass;});var tallest=Math.max.apply(Math,_toConsumableArray(heightArray));var heaviest=Math.max.apply(Math,_toConsumableArray(massArray));var mostPopular=100;var todivedBy=tallest/100;var todivedByforMass=heaviest/100;return/*#__PURE__*/_jsx(\"div\",{className:\"CardDisplay\",children:filteredList.map(function(item,index){return/*#__PURE__*/_jsx(Card2,{name:item.name,rank:item.rank,mass:item.mass,height:item.height,gender:item.gender,todivedBy:todivedBy,todivedByforMass:todivedByforMass,cardFlash:cardFlash,count:count},index);})});};export default CardDisplay;","map":{"version":3,"sources":["/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js"],"names":["React","Component","Card2","CardDisplay","starWarsList","search","select","cardFlash","count","SWLCPY","JSON","parse","stringify","results","console","log","rank","SortArrayByAlpha","x","y","name","sortedList","sort","a","b","parseFloat","height","mass","filteredList","filter","item","toLowerCase","includes","heightArray","map","massArray","tallest","Math","max","heaviest","mostPopular","todivedBy","todivedByforMass","index","gender"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card2 from \"./Card2\";\nconst CardDisplay = ({ starWarsList, search, select, cardFlash, count }) => {\n  const SWLCPY = JSON.parse(JSON.stringify(starWarsList.results));\n  console.log(\"this is SWLCPy\");\n  console.log(SWLCPY);\n  SWLCPY[0].rank = 1;\n  SWLCPY[1].rank = 2;\n  SWLCPY[2].rank = 3;\n  SWLCPY[3].rank = 4;\n  SWLCPY[9].rank = 5;\n  SWLCPY[4].rank = 6;\n  SWLCPY[5].rank = 7;\n  SWLCPY[6].rank = 8;\n  SWLCPY[7].rank = 9;\n  SWLCPY[8].rank = 10;\n\n  function SortArrayByAlpha(x, y) {\n    if (x.name < y.name) {\n      return -1;\n    }\n    if (x.name > y.name) {\n      return 1;\n    }\n    return 0;\n  }\n  var sortedList;\n  switch (select) {\n    case \"popularity\":\n      sortedList = SWLCPY.sort(function (a, b) {\n        return parseFloat(a.rank) - parseFloat(b.rank);\n      });\n      break;\n    case \"alphabetical\":\n      sortedList = SWLCPY.sort(SortArrayByAlpha);\n      break;\n    case \"height\":\n      sortedList = SWLCPY.sort(function (a, b) {\n        return parseFloat(a.height) - parseFloat(b.height);\n      });\n      break;\n    case \"mass\":\n      sortedList = SWLCPY.sort(function (a, b) {\n        return parseFloat(a.mass) - parseFloat(b.mass);\n      });\n      break;\n  }\n\n  if (starWarsList !== \"\") {\n    var filteredList = sortedList.filter((item) => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n  } else {\n    filteredList = sortedList;\n  }\n\n  const heightArray = starWarsList.results.map((item) => {\n    return item.height;\n  });\n  const massArray = starWarsList.results.map((item) => {\n    return item.mass;\n  });\n\n  let tallest = Math.max(...heightArray);\n  let heaviest = Math.max(...massArray);\n  let mostPopular = 100;\n  let todivedBy = tallest / 100;\n  let todivedByforMass = heaviest / 100;\n  return (\n    <div className=\"CardDisplay\">\n      {filteredList.map((item, index) => {\n        return (\n          <Card2\n            key={index}\n            name={item.name}\n            rank={item.rank}\n            mass={item.mass}\n            height={item.height}\n            gender={item.gender}\n            todivedBy={todivedBy}\n            todivedByforMass={todivedByforMass}\n            cardFlash={cardFlash}\n            count={count}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardDisplay;\n"]},"metadata":{},"sourceType":"module"}