{"ast":null,"code":"var _jsxFileName = \"/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js\";\nimport React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDisplay = _ref => {\n  let {\n    starWarsList,\n    search,\n    select\n  } = _ref;\n  var sortedList;\n\n  if (select === \"popularity\") {\n    var sortedList = starWarsList;\n    console.log(sortedList);\n  }\n\n  if (sortedList !== \"\") {\n    var filteredList = sortedList.results.filter(item => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n    console.log(filteredList);\n  } else {\n    filteredList = sortedList;\n  }\n\n  const heightArray = starWarsList.results.map(item => {\n    return item.height;\n  });\n  let tallest = Math.max(...heightArray);\n  console.log(tallest);\n  let todivedBy = tallest / 100;\n  console.log(todivedBy);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardDisplay\",\n    children: sortedList.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        name: item.name,\n        mass: item.mass,\n        height: item.height,\n        gender: item.gender,\n        todivedBy: todivedBy\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CardDisplay;\nexport default CardDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"sources":["/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js"],"names":["React","Component","Card","CardDisplay","starWarsList","search","select","sortedList","console","log","filteredList","results","filter","item","name","toLowerCase","includes","heightArray","map","height","tallest","Math","max","todivedBy","index","mass","gender"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,MAAMC,WAAW,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,GAAqC;AACxD,MAAIC,UAAJ;;AACA,MAAID,MAAM,KAAK,YAAf,EAA6B;AAC3B,QAAIC,UAAU,GAAGH,YAAjB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD;;AACD,MAAIA,UAAU,KAAK,EAAnB,EAAuB;AACrB,QAAIG,YAAY,GAAGH,UAAU,CAACI,OAAX,CAAmBC,MAAnB,CAA2BC,IAAD,IAAU;AACrD,aAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCX,MAAM,CAACU,WAAP,EAAjC,CAAP;AACD,KAFkB,CAAnB;AAGAP,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACD,GALD,MAKO;AACLA,IAAAA,YAAY,GAAGH,UAAf;AACD;;AAED,QAAMU,WAAW,GAAGb,YAAY,CAACO,OAAb,CAAqBO,GAArB,CAA0BL,IAAD,IAAU;AACrD,WAAOA,IAAI,CAACM,MAAZ;AACD,GAFmB,CAApB;AAIA,MAAIC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGL,WAAZ,CAAd;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYW,OAAZ;AACA,MAAIG,SAAS,GAAGH,OAAO,GAAG,GAA1B;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYc,SAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACGhB,UAAU,CAACW,GAAX,CAAe,CAACL,IAAD,EAAOW,KAAP,KAAiB;AAC/B,0BACE,QAAC,IAAD;AAEE,QAAA,IAAI,EAAEX,IAAI,CAACC,IAFb;AAGE,QAAA,IAAI,EAAED,IAAI,CAACY,IAHb;AAIE,QAAA,MAAM,EAAEZ,IAAI,CAACM,MAJf;AAKE,QAAA,MAAM,EAAEN,IAAI,CAACa,MALf;AAME,QAAA,SAAS,EAAEH;AANb,SACOC,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxCD;;KAAMrB,W;AA0CN,eAAeA,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card from \"./Card\";\nconst CardDisplay = ({ starWarsList, search, select }) => {\n  var sortedList;\n  if (select === \"popularity\") {\n    var sortedList = starWarsList;\n    console.log(sortedList);\n  }\n  if (sortedList !== \"\") {\n    var filteredList = sortedList.results.filter((item) => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n    console.log(filteredList);\n  } else {\n    filteredList = sortedList;\n  }\n\n  const heightArray = starWarsList.results.map((item) => {\n    return item.height;\n  });\n\n  let tallest = Math.max(...heightArray);\n  console.log(tallest);\n  let todivedBy = tallest / 100;\n  console.log(todivedBy);\n\n  return (\n    <div className=\"CardDisplay\">\n      {sortedList.map((item, index) => {\n        return (\n          <Card\n            key={index}\n            name={item.name}\n            mass={item.mass}\n            height={item.height}\n            gender={item.gender}\n            todivedBy={todivedBy}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardDisplay;\n"]},"metadata":{},"sourceType":"module"}