{"ast":null,"code":"var _jsxFileName = \"/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js\";\nimport React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDisplay = _ref => {\n  let {\n    starWarsList,\n    search,\n    select\n  } = _ref;\n\n  function SortArrayByAlpha(x, y) {\n    if (x.name < y.name) {\n      return -1;\n    }\n\n    if (x.name > y.name) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  switch (select) {\n    case \"popularity\":\n      sortedList = JSON.parse(JSON.stringify(starWarsList.results));\n      break;\n\n    case \"alphabetical\":\n      let sortedListCPY = starWarsList.results.sort(SortArrayByAlpha);\n      sortedList = JSON.parse(JSON.stringify(sortedListCPY));\n      break;\n\n    case \"height\":\n      let sortedListCPY2 = starWarsList.results.sort(function (a, b) {\n        return parseFloat(a.height) - parseFloat(b.height);\n      });\n      sortedList = JSON.parse(JSON.stringify(sortedListCPY2));\n      break;\n  }\n\n  let starWarsListCPY = JSON.parse(JSON.stringify(starWarsList.results));\n  console.log(starWarsListCPY);\n\n  if (starWarsList !== \"\") {\n    var filteredList = starWarsList.results.filter(item => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n  } else {\n    filteredList = starWarsList;\n  }\n\n  const heightArray = starWarsList.results.map(item => {\n    return item.height;\n  });\n  let tallest = Math.max(...heightArray);\n  let todivedBy = tallest / 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardDisplay\",\n    children: filteredList.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        name: item.name,\n        mass: item.mass,\n        height: item.height,\n        gender: item.gender,\n        todivedBy: todivedBy\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CardDisplay;\nexport default CardDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"sources":["/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js"],"names":["React","Component","Card","CardDisplay","starWarsList","search","select","SortArrayByAlpha","x","y","name","sortedList","JSON","parse","stringify","results","sortedListCPY","sort","sortedListCPY2","a","b","parseFloat","height","starWarsListCPY","console","log","filteredList","filter","item","toLowerCase","includes","heightArray","map","tallest","Math","max","todivedBy","index","mass","gender"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card from \"./Card\";\nconst CardDisplay = ({ starWarsList, search, select }) => {\n  function SortArrayByAlpha(x, y) {\n    if (x.name < y.name) {\n      return -1;\n    }\n    if (x.name > y.name) {\n      return 1;\n    }\n    return 0;\n  }\n  switch (select) {\n    case \"popularity\":\n      sortedList = JSON.parse(JSON.stringify(starWarsList.results));\n      break;\n    case \"alphabetical\":\n      let sortedListCPY = starWarsList.results.sort(SortArrayByAlpha);\n      sortedList = JSON.parse(JSON.stringify(sortedListCPY));\n      break;\n    case \"height\":\n      let sortedListCPY2 = starWarsList.results.sort(function (a, b) {\n        return parseFloat(a.height) - parseFloat(b.height);\n      });\n      sortedList = JSON.parse(JSON.stringify(sortedListCPY2));\n      break;\n  }\n\n  let starWarsListCPY = JSON.parse(JSON.stringify(starWarsList.results));\n  console.log(starWarsListCPY);\n\n  if (starWarsList !== \"\") {\n    var filteredList = starWarsList.results.filter((item) => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n  } else {\n    filteredList = starWarsList;\n  }\n\n  const heightArray = starWarsList.results.map((item) => {\n    return item.height;\n  });\n\n  let tallest = Math.max(...heightArray);\n  let todivedBy = tallest / 100;\n\n  return (\n    <div className=\"CardDisplay\">\n      {filteredList.map((item, index) => {\n        return (\n          <Card\n            key={index}\n            name={item.name}\n            mass={item.mass}\n            height={item.height}\n            gender={item.gender}\n            todivedBy={todivedBy}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardDisplay;\n"]},"metadata":{},"sourceType":"module"}