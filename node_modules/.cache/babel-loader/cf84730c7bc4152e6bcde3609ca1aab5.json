{"ast":null,"code":"var _jsxFileName = \"/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js\";\nimport React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDisplay = _ref => {\n  let {\n    starWarsList,\n    search,\n    select\n  } = _ref;\n\n  // var sortedList = JSON.parse(JSON.stringify(starWarsList.results));\n  // function SortArrayByAlpha(x, y) {\n  //   if (x.name < y.name) {\n  //     return -1;\n  //   }\n  //   if (x.name > y.name) {\n  //     return 1;\n  //   }\n  //   return 0;\n  // }\n  // switch (select) {\n  //   case \"popularity\":\n  //     sortedList = JSON.parse(JSON.stringify(starWarsList.results));\n  //     break;\n  //   case \"alphabetical\":\n  //     let sortedListCPY = starWarsList.results.sort(SortArrayByAlpha);\n  //     sortedList = JSON.parse(JSON.stringify(sortedListCPY));\n  //     break;\n  //   case \"height\":\n  //     let sortedListCPY2 = starWarsList.results.sort(function (a, b) {\n  //       return parseFloat(a.height) - parseFloat(b.height);\n  //     });\n  //     sortedList = JSON.parse(JSON.stringify(sortedListCPY2));\n  //     break;\n  // }\n  if (starWarsList !== \"\") {\n    var filteredList = starWarsList.filter(item => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n  } else {\n    filteredList = sortedList;\n  }\n\n  const heightArray = starWarsList.results.map(item => {\n    return item.height;\n  });\n  let tallest = Math.max(...heightArray);\n  let todivedBy = tallest / 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardDisplay\",\n    children: filteredList.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        name: item.name,\n        mass: item.mass,\n        height: item.height,\n        gender: item.gender,\n        todivedBy: todivedBy\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CardDisplay;\nexport default CardDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"sources":["/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js"],"names":["React","Component","Card","CardDisplay","starWarsList","search","select","filteredList","filter","item","name","toLowerCase","includes","sortedList","heightArray","results","map","height","tallest","Math","max","todivedBy","index","mass","gender"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,MAAMC,WAAW,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,GAAqC;;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIF,YAAY,KAAK,EAArB,EAAyB;AACvB,QAAIG,YAAY,GAAGH,YAAY,CAACI,MAAb,CAAqBC,IAAD,IAAU;AAC/C,aAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCP,MAAM,CAACM,WAAP,EAAjC,CAAP;AACD,KAFkB,CAAnB;AAGD,GAJD,MAIO;AACLJ,IAAAA,YAAY,GAAGM,UAAf;AACD;;AAED,QAAMC,WAAW,GAAGV,YAAY,CAACW,OAAb,CAAqBC,GAArB,CAA0BP,IAAD,IAAU;AACrD,WAAOA,IAAI,CAACQ,MAAZ;AACD,GAFmB,CAApB;AAIA,MAAIC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGN,WAAZ,CAAd;AACA,MAAIO,SAAS,GAAGH,OAAO,GAAG,GAA1B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACGX,YAAY,CAACS,GAAb,CAAiB,CAACP,IAAD,EAAOa,KAAP,KAAiB;AACjC,0BACE,QAAC,IAAD;AAEE,QAAA,IAAI,EAAEb,IAAI,CAACC,IAFb;AAGE,QAAA,IAAI,EAAED,IAAI,CAACc,IAHb;AAIE,QAAA,MAAM,EAAEd,IAAI,CAACQ,MAJf;AAKE,QAAA,MAAM,EAAER,IAAI,CAACe,MALf;AAME,QAAA,SAAS,EAAEH;AANb,SACOC,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1DD;;KAAMnB,W;AA4DN,eAAeA,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card from \"./Card\";\nconst CardDisplay = ({ starWarsList, search, select }) => {\n  // var sortedList = JSON.parse(JSON.stringify(starWarsList.results));\n  // function SortArrayByAlpha(x, y) {\n  //   if (x.name < y.name) {\n  //     return -1;\n  //   }\n  //   if (x.name > y.name) {\n  //     return 1;\n  //   }\n  //   return 0;\n  // }\n  // switch (select) {\n  //   case \"popularity\":\n  //     sortedList = JSON.parse(JSON.stringify(starWarsList.results));\n  //     break;\n  //   case \"alphabetical\":\n  //     let sortedListCPY = starWarsList.results.sort(SortArrayByAlpha);\n  //     sortedList = JSON.parse(JSON.stringify(sortedListCPY));\n  //     break;\n  //   case \"height\":\n  //     let sortedListCPY2 = starWarsList.results.sort(function (a, b) {\n  //       return parseFloat(a.height) - parseFloat(b.height);\n  //     });\n  //     sortedList = JSON.parse(JSON.stringify(sortedListCPY2));\n  //     break;\n  // }\n\n  if (starWarsList !== \"\") {\n    var filteredList = starWarsList.filter((item) => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n  } else {\n    filteredList = sortedList;\n  }\n\n  const heightArray = starWarsList.results.map((item) => {\n    return item.height;\n  });\n\n  let tallest = Math.max(...heightArray);\n  let todivedBy = tallest / 100;\n\n  return (\n    <div className=\"CardDisplay\">\n      {filteredList.map((item, index) => {\n        return (\n          <Card\n            key={index}\n            name={item.name}\n            mass={item.mass}\n            height={item.height}\n            gender={item.gender}\n            todivedBy={todivedBy}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardDisplay;\n"]},"metadata":{},"sourceType":"module"}