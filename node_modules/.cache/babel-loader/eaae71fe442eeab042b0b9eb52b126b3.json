{"ast":null,"code":"var _jsxFileName = \"/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js\";\nimport React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card2 from \"./Card2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDisplay = _ref => {\n  let {\n    starWarsList,\n    search,\n    select,\n    cardFlash\n  } = _ref;\n  let starWarsListCPY = JSON.parse(JSON.stringify(starWarsList.results));\n  console.log(starWarsListCPY);\n\n  function SortArrayByAlpha(x, y) {\n    if (x.name < y.name) {\n      return -1;\n    }\n\n    if (x.name > y.name) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  var sortedList;\n\n  switch (select) {\n    case \"popularity\":\n      sortedList = JSON.parse(JSON.stringify(starWarsListCPY));\n      break;\n\n    case \"alphabetical\":\n      sortedList = starWarsListCPY.sort(SortArrayByAlpha);\n      break;\n\n    case \"height\":\n      sortedList = starWarsListCPY.sort(function (a, b) {\n        return parseFloat(a.height) - parseFloat(b.height);\n      });\n      break;\n\n    case \"mass\":\n      sortedList = starWarsListCPY.sort(function (a, b) {\n        return parseFloat(a.mass) - parseFloat(b.mass);\n      });\n      break;\n  }\n\n  if (starWarsList !== \"\") {\n    var filteredList = sortedList.filter(item => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n  } else {\n    filteredList = sortedList;\n  }\n\n  const heightArray = starWarsList.results.map(item => {\n    return item.height;\n  });\n  const massArray = starWarsList.results.map(item => {\n    return item.mass;\n  });\n  let tallest = Math.max(...heightArray);\n  let heaviest = Math.max(...massArray);\n  let todivedBy = tallest / 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardDisplay\",\n    children: filteredList.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Card2, {\n        name: item.name,\n        mass: item.mass,\n        height: item.height,\n        gender: item.gender,\n        todivedBy: todivedBy,\n        cardFlash: cardFlash\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CardDisplay;\nexport default CardDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"sources":["/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js"],"names":["React","Component","Card2","CardDisplay","starWarsList","search","select","cardFlash","starWarsListCPY","JSON","parse","stringify","results","console","log","SortArrayByAlpha","x","y","name","sortedList","sort","a","b","parseFloat","height","mass","filteredList","filter","item","toLowerCase","includes","heightArray","map","massArray","tallest","Math","max","heaviest","todivedBy","index","gender"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card2 from \"./Card2\";\nconst CardDisplay = ({ starWarsList, search, select, cardFlash }) => {\n  let starWarsListCPY = JSON.parse(JSON.stringify(starWarsList.results));\n  console.log(starWarsListCPY);\n\n  function SortArrayByAlpha(x, y) {\n    if (x.name < y.name) {\n      return -1;\n    }\n    if (x.name > y.name) {\n      return 1;\n    }\n    return 0;\n  }\n  var sortedList;\n  switch (select) {\n    case \"popularity\":\n      sortedList = JSON.parse(JSON.stringify(starWarsListCPY));\n      break;\n    case \"alphabetical\":\n      sortedList = starWarsListCPY.sort(SortArrayByAlpha);\n      break;\n    case \"height\":\n      sortedList = starWarsListCPY.sort(function (a, b) {\n        return parseFloat(a.height) - parseFloat(b.height);\n      });\n      break;\n    case \"mass\":\n      sortedList = starWarsListCPY.sort(function (a, b) {\n        return parseFloat(a.mass) - parseFloat(b.mass);\n      });\n      break;\n  }\n\n  if (starWarsList !== \"\") {\n    var filteredList = sortedList.filter((item) => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n  } else {\n    filteredList = sortedList;\n  }\n\n  const heightArray = starWarsList.results.map((item) => {\n    return item.height;\n  });\n  const massArray = starWarsList.results.map((item) => {\n    return item.mass;\n  });\n\n  let tallest = Math.max(...heightArray);\n  let heaviest = Math.max(...massArray);\n  let todivedBy = tallest / 100;\n\n  return (\n    <div className=\"CardDisplay\">\n      {filteredList.map((item, index) => {\n        return (\n          <Card2\n            key={index}\n            name={item.name}\n            mass={item.mass}\n            height={item.height}\n            gender={item.gender}\n            todivedBy={todivedBy}\n            cardFlash={cardFlash}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardDisplay;\n"]},"metadata":{},"sourceType":"module"}