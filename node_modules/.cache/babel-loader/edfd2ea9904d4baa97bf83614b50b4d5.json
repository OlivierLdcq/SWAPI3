{"ast":null,"code":"var _jsxFileName = \"/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js\";\nimport React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDisplay = _ref => {\n  let {\n    starWarsList,\n    search,\n    select\n  } = _ref;\n  console.log(select); // var sortedList;\n\n  switch (select) {\n    case \"popularity\":\n      sortedList = starWarsList;\n      break;\n\n    case \"alphabetical\":\n      sortedList = [\"\", \"\"];\n      break;\n\n    default:\n      break;\n  }\n\n  if (starWarsList !== \"\") {\n    var filteredList = starWarsList.results.filter(item => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n    console.log(filteredList);\n  } else {\n    filteredList = starWarsList;\n  }\n\n  const heightArray = starWarsList.results.map(item => {\n    return item.height;\n  });\n  let tallest = Math.max(...heightArray);\n  console.log(tallest);\n  let todivedBy = tallest / 100;\n  console.log(todivedBy);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardDisplay\",\n    children: filteredList.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        name: item.name,\n        mass: item.mass,\n        height: item.height,\n        gender: item.gender,\n        todivedBy: todivedBy\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CardDisplay;\nexport default CardDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"sources":["/Users/olivierlesucq/Documents/swapi/src/components/CardDisplay.js"],"names":["React","Component","Card","CardDisplay","starWarsList","search","select","console","log","sortedList","filteredList","results","filter","item","name","toLowerCase","includes","heightArray","map","height","tallest","Math","max","todivedBy","index","mass","gender"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,MAAMC,WAAW,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,GAAqC;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADwD,CAExD;;AACA,UAAQA,MAAR;AACE,SAAK,YAAL;AACEG,MAAAA,UAAU,GAAGL,YAAb;AACA;;AACF,SAAK,cAAL;AACEK,MAAAA,UAAU,GAAG,CAAC,EAAD,EAAK,EAAL,CAAb;AACA;;AAEF;AACE;AATJ;;AAYA,MAAIL,YAAY,KAAK,EAArB,EAAyB;AACvB,QAAIM,YAAY,GAAGN,YAAY,CAACO,OAAb,CAAqBC,MAArB,CAA6BC,IAAD,IAAU;AACvD,aAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCX,MAAM,CAACU,WAAP,EAAjC,CAAP;AACD,KAFkB,CAAnB;AAGAR,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AACD,GALD,MAKO;AACLA,IAAAA,YAAY,GAAGN,YAAf;AACD;;AAED,QAAMa,WAAW,GAAGb,YAAY,CAACO,OAAb,CAAqBO,GAArB,CAA0BL,IAAD,IAAU;AACrD,WAAOA,IAAI,CAACM,MAAZ;AACD,GAFmB,CAApB;AAIA,MAAIC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGL,WAAZ,CAAd;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYY,OAAZ;AACA,MAAIG,SAAS,GAAGH,OAAO,GAAG,GAA1B;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAYe,SAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACGb,YAAY,CAACQ,GAAb,CAAiB,CAACL,IAAD,EAAOW,KAAP,KAAiB;AACjC,0BACE,QAAC,IAAD;AAEE,QAAA,IAAI,EAAEX,IAAI,CAACC,IAFb;AAGE,QAAA,IAAI,EAAED,IAAI,CAACY,IAHb;AAIE,QAAA,MAAM,EAAEZ,IAAI,CAACM,MAJf;AAKE,QAAA,MAAM,EAAEN,IAAI,CAACa,MALf;AAME,QAAA,SAAS,EAAEH;AANb,SACOC,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjDD;;KAAMrB,W;AAmDN,eAAeA,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CardDisplay.css\";\nimport Card from \"./Card\";\nconst CardDisplay = ({ starWarsList, search, select }) => {\n  console.log(select);\n  // var sortedList;\n  switch (select) {\n    case \"popularity\":\n      sortedList = starWarsList;\n      break;\n    case \"alphabetical\":\n      sortedList = [\"\", \"\"];\n      break;\n\n    default:\n      break;\n  }\n\n  if (starWarsList !== \"\") {\n    var filteredList = starWarsList.results.filter((item) => {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n    console.log(filteredList);\n  } else {\n    filteredList = starWarsList;\n  }\n\n  const heightArray = starWarsList.results.map((item) => {\n    return item.height;\n  });\n\n  let tallest = Math.max(...heightArray);\n  console.log(tallest);\n  let todivedBy = tallest / 100;\n  console.log(todivedBy);\n\n  return (\n    <div className=\"CardDisplay\">\n      {filteredList.map((item, index) => {\n        return (\n          <Card\n            key={index}\n            name={item.name}\n            mass={item.mass}\n            height={item.height}\n            gender={item.gender}\n            todivedBy={todivedBy}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardDisplay;\n"]},"metadata":{},"sourceType":"module"}